{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":101385,"databundleVersionId":12220852,"sourceType":"competition"}],"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# 라이브러리","metadata":{"_uuid":"68cb74ec-5af9-4bb5-9219-d06daa511ec0","_cell_guid":"047331d9-8b66-4d17-8658-5fda8fd42a44","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"!pip install -U scikit-learn==1.3.2 imbalanced-learn==0.11.0","metadata":{"_uuid":"013d5857-85e6-44bd-bbbb-65f651516c4b","_cell_guid":"0318fdc8-e6da-478f-8b16-0caba62aa657","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:07.976539Z","iopub.execute_input":"2025-06-03T17:56:07.976863Z","iopub.status.idle":"2025-06-03T17:56:11.262141Z","shell.execute_reply.started":"2025-06-03T17:56:07.976837Z","shell.execute_reply":"2025-06-03T17:56:11.261221Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 기본 라이브러리\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport shap\nimport matplotlib\nimport warnings\n\nwarnings.filterwarnings(action='ignore')\n\n# 전처리 및 유틸\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler, LabelEncoder\nfrom sklearn.utils.class_weight import compute_class_weight\nfrom sklearn.pipeline import Pipeline\nfrom imblearn.pipeline import Pipeline\nfrom sklearn.base import clone\nfrom scipy.stats import mode\nfrom imblearn.over_sampling import SMOTE\nfrom sklearn.decomposition import PCA\nfrom sklearn.manifold import TSNE\nfrom sklearn.inspection import permutation_importance\nfrom tqdm.notebook import tqdm\nfrom sklearn.svm import SVC\nfrom imblearn.combine import SMOTETomek\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.manifold import TSNE\nfrom sklearn.cluster import KMeans\n\n# 모델 평가 / 지표\nfrom sklearn.metrics import accuracy_score, f1_score, make_scorer, classification_report, confusion_matrix\nfrom sklearn.metrics import roc_auc_score, precision_recall_curve, auc\n\n# 데이터 분할 및 교차검증\nfrom sklearn.model_selection import train_test_split, StratifiedKFold, RandomizedSearchCV, cross_val_score\n\n# 분류 모델\nfrom sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier, VotingClassifier, StackingClassifier, BaggingClassifier\nfrom xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\nfrom catboost import CatBoostClassifier\nfrom sklearn.linear_model import LogisticRegression","metadata":{"_uuid":"a53f2cd9-1b00-4e8b-bdc1-d14479462956","_cell_guid":"83452c03-b060-419d-ae3a-fbb46b812f7e","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2025-06-03T17:56:11.263917Z","iopub.execute_input":"2025-06-03T17:56:11.264206Z","iopub.status.idle":"2025-06-03T17:56:16.852761Z","shell.execute_reply.started":"2025-06-03T17:56:11.264183Z","shell.execute_reply":"2025-06-03T17:56:16.851990Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# 데이터 불러오기","metadata":{"_uuid":"5132179b-0730-4cd2-a062-48a58dca9a9b","_cell_guid":"2e93ca1b-3ad8-441e-9d61-8ade2b915d52","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"x_train = pd.read_csv('/kaggle/input/uou-ie-g-03874-spring-2025-term-project/ML_x_train.csv')\nx_test = pd.read_csv('/kaggle/input/uou-ie-g-03874-spring-2025-term-project/ML_x_test.csv')\ny_train = pd.read_csv('/kaggle/input/uou-ie-g-03874-spring-2025-term-project/ML_y_train.csv')","metadata":{"_uuid":"3806fca5-e548-4792-9404-f84ec525848f","_cell_guid":"e524243a-e92d-49ef-a797-34189b156012","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:16.853448Z","iopub.execute_input":"2025-06-03T17:56:16.853979Z","iopub.status.idle":"2025-06-03T17:56:16.886303Z","shell.execute_reply.started":"2025-06-03T17:56:16.853935Z","shell.execute_reply":"2025-06-03T17:56:16.885615Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"x_train","metadata":{"_uuid":"cef1f4d4-f708-4aec-8751-e9eaa9bf83c3","_cell_guid":"2a447592-456a-466f-ab9c-1207972e3258","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2025-06-03T17:56:16.887004Z","iopub.execute_input":"2025-06-03T17:56:16.887218Z","iopub.status.idle":"2025-06-03T17:56:16.911934Z","shell.execute_reply.started":"2025-06-03T17:56:16.887203Z","shell.execute_reply":"2025-06-03T17:56:16.911038Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"y_train","metadata":{"_uuid":"6bd7d54c-35d2-49c8-8953-186361b3122a","_cell_guid":"01b94b80-40f8-46e8-999c-c63e2662a203","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2025-06-03T17:56:16.914176Z","iopub.execute_input":"2025-06-03T17:56:16.914506Z","iopub.status.idle":"2025-06-03T17:56:16.924716Z","shell.execute_reply.started":"2025-06-03T17:56:16.914482Z","shell.execute_reply":"2025-06-03T17:56:16.923729Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"x_test","metadata":{"_uuid":"bc2c3bd1-4577-451c-9923-3de53d03d638","_cell_guid":"904730d1-fbd2-4de6-b279-36fce1120321","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:16.925487Z","iopub.execute_input":"2025-06-03T17:56:16.925768Z","iopub.status.idle":"2025-06-03T17:56:16.952612Z","shell.execute_reply.started":"2025-06-03T17:56:16.925747Z","shell.execute_reply":"2025-06-03T17:56:16.951553Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# 데이터 분석","metadata":{"_uuid":"d1d73f1d-f94b-4bbd-ab27-22d0b8f04b6d","_cell_guid":"4e9b4955-9408-4e5f-b276-b8f10e266d2e","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"markdown","source":"[참고] Credit Score Classification Part:1 Data Cleaning\n\n - https://www.kaggle.com/code/clkmuhammed/credit-score-classification-part-1-data-cleaning#B.-Examining-the-Data","metadata":{"_uuid":"74df4a18-be9d-43f9-aa84-e4985c80a3c7","_cell_guid":"f1e99e43-422f-4fe9-9685-8ad6929b7495","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"# 숫자를 지수표기법(e) 대신 소수점 두 자리로 표시\npd.options.display.float_format = '{:.2f}'.format","metadata":{"_uuid":"b688646c-2b20-4e29-8301-c5511c2f2a0e","_cell_guid":"8efaa2a0-1f6c-4e56-ab44-cf05d4a59ab1","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:16.953982Z","iopub.execute_input":"2025-06-03T17:56:16.954891Z","iopub.status.idle":"2025-06-03T17:56:16.972248Z","shell.execute_reply.started":"2025-06-03T17:56:16.954863Z","shell.execute_reply":"2025-06-03T17:56:16.971371Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# train/test 데이터 크기 확인\nx_train.shape, x_test.shape","metadata":{"_uuid":"ca36b3a6-10f0-47bb-9064-b80cbdfcb99a","_cell_guid":"c1720464-754a-46b0-940e-6d81597c1274","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:16.973151Z","iopub.execute_input":"2025-06-03T17:56:16.973491Z","iopub.status.idle":"2025-06-03T17:56:17.000423Z","shell.execute_reply.started":"2025-06-03T17:56:16.973461Z","shell.execute_reply":"2025-06-03T17:56:16.999437Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"x_train.info()","metadata":{"_uuid":"7237ae37-a880-445d-946e-2d36ff479783","_cell_guid":"50d2a8d6-02a3-4395-b72c-dbc21bdf9f90","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2025-06-03T17:56:17.001683Z","iopub.execute_input":"2025-06-03T17:56:17.001913Z","iopub.status.idle":"2025-06-03T17:56:17.024594Z","shell.execute_reply.started":"2025-06-03T17:56:17.001898Z","shell.execute_reply":"2025-06-03T17:56:17.024030Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"x_test.info()","metadata":{"_uuid":"04e8959f-e8a2-40d4-bd8c-ccfacb1f4265","_cell_guid":"a1728958-a9dd-4f02-adc5-525c2931666c","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:17.025131Z","iopub.execute_input":"2025-06-03T17:56:17.025307Z","iopub.status.idle":"2025-06-03T17:56:17.040548Z","shell.execute_reply.started":"2025-06-03T17:56:17.025279Z","shell.execute_reply":"2025-06-03T17:56:17.039758Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"y_train.info()","metadata":{"_uuid":"fe7977da-0bb2-4f3b-840c-c37f84e372d2","_cell_guid":"db1d7823-bcd5-4804-9f2c-b192938467c7","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2025-06-03T17:56:17.041578Z","iopub.execute_input":"2025-06-03T17:56:17.041803Z","iopub.status.idle":"2025-06-03T17:56:17.063643Z","shell.execute_reply.started":"2025-06-03T17:56:17.041785Z","shell.execute_reply":"2025-06-03T17:56:17.062656Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"x_train.describe().T\n\n# std는 표준편차, mean 평균, min 최소, max 최대","metadata":{"_uuid":"289e54ce-7777-4cc1-b994-54ca8e22ed4f","_cell_guid":"cb52619e-2847-4496-9e3c-aa0dfc379c2e","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:17.065018Z","iopub.execute_input":"2025-06-03T17:56:17.065232Z","iopub.status.idle":"2025-06-03T17:56:17.115659Z","shell.execute_reply.started":"2025-06-03T17:56:17.065214Z","shell.execute_reply":"2025-06-03T17:56:17.115017Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"x_test.describe().T","metadata":{"_uuid":"718cfc65-f2e9-4f8b-9ce4-35ac52ccf8cb","_cell_guid":"ee40cc46-c3f9-4b6d-8c3d-deffe59851bb","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:17.116188Z","iopub.execute_input":"2025-06-03T17:56:17.116410Z","iopub.status.idle":"2025-06-03T17:56:17.155771Z","shell.execute_reply.started":"2025-06-03T17:56:17.116390Z","shell.execute_reply":"2025-06-03T17:56:17.155034Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"y_train.describe().T","metadata":{"_uuid":"080c10f9-1118-42f4-9117-427dd9f6b213","_cell_guid":"402e0710-df73-4076-8472-8b942ea17178","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:17.158935Z","iopub.execute_input":"2025-06-03T17:56:17.159190Z","iopub.status.idle":"2025-06-03T17:56:17.170657Z","shell.execute_reply.started":"2025-06-03T17:56:17.159173Z","shell.execute_reply":"2025-06-03T17:56:17.169945Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# 데이터 전처리","metadata":{"_uuid":"6cbff9c7-540e-4f53-8631-d085d39a64bd","_cell_guid":"73736040-877f-4ffc-bd88-ea3322598f9c","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"markdown","source":"## 1. 데이터 통합 (x_train/test)","metadata":{"_uuid":"f42495ae-2695-4bc6-9045-84fcd15382c6","_cell_guid":"f80a7019-c285-4f6d-a018-bcfaca7d4bb1","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"# train/test 데이터 통합 (데이터 전처리하고 다시 분리 예정)\nx_train['is_train'] = 1\nx_test['is_train'] = 0\nx = pd.concat([x_train, x_test], ignore_index=True)\nx.shape","metadata":{"_uuid":"85c07ec0-70c3-4b37-8de6-befda40195cc","_cell_guid":"a7dc826c-63be-474c-be93-99467a68a6bd","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:17.171368Z","iopub.execute_input":"2025-06-03T17:56:17.171544Z","iopub.status.idle":"2025-06-03T17:56:17.190130Z","shell.execute_reply.started":"2025-06-03T17:56:17.171528Z","shell.execute_reply":"2025-06-03T17:56:17.189237Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"x.describe().T","metadata":{"_uuid":"f44a0187-4403-4869-8db2-b09d8bbc1b1a","_cell_guid":"c923802a-6892-4db3-8b5c-677a0c645118","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:17.191046Z","iopub.execute_input":"2025-06-03T17:56:17.191305Z","iopub.status.idle":"2025-06-03T17:56:17.242622Z","shell.execute_reply.started":"2025-06-03T17:56:17.191282Z","shell.execute_reply":"2025-06-03T17:56:17.242028Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## 2. 결측치 확인","metadata":{"_uuid":"e17ca150-2826-47f6-91ad-03d4f62259cb","_cell_guid":"c80aaa88-635d-4c2c-9066-af723a2be6f7","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"# 각 열 결측치 개수 확인\nx.isna().sum()","metadata":{"_uuid":"64dcb5fa-7b61-40d1-9ae4-61d2713b9e34","_cell_guid":"9ac33f4e-4696-405a-9c19-bb195be924e6","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:17.243154Z","iopub.execute_input":"2025-06-03T17:56:17.243340Z","iopub.status.idle":"2025-06-03T17:56:17.250233Z","shell.execute_reply.started":"2025-06-03T17:56:17.243324Z","shell.execute_reply":"2025-06-03T17:56:17.249584Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 각 열의 결측치 비율 확인\nx.isnull().mean()*100","metadata":{"_uuid":"72d98b19-c500-44da-b6e6-d21798cf79af","_cell_guid":"e634e625-8a11-41d3-b3c7-f022e69b9bba","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:17.250936Z","iopub.execute_input":"2025-06-03T17:56:17.251189Z","iopub.status.idle":"2025-06-03T17:56:17.273149Z","shell.execute_reply.started":"2025-06-03T17:56:17.251172Z","shell.execute_reply":"2025-06-03T17:56:17.272275Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## 3. 이상치 확인","metadata":{"_uuid":"f65a1d78-d169-4422-8c3c-382a5d29ef54","_cell_guid":"e026b3bf-8e34-441a-827e-c324770361b8","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"x_copy = x.copy()\nx_copy.shape","metadata":{"_uuid":"d3f7ca9d-5147-4d69-b465-3519a664c32f","_cell_guid":"54882e3d-17a3-4dcf-8db6-8d7c74366a33","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:17.274317Z","iopub.execute_input":"2025-06-03T17:56:17.274567Z","iopub.status.idle":"2025-06-03T17:56:17.294330Z","shell.execute_reply.started":"2025-06-03T17:56:17.274548Z","shell.execute_reply":"2025-06-03T17:56:17.293340Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"x = x_copy\nx.info()","metadata":{"_uuid":"42f0a63a-e678-4eb0-8409-af59775cba63","_cell_guid":"9d1c0b20-cecd-4825-aa18-c04435ce0b79","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:17.295330Z","iopub.execute_input":"2025-06-03T17:56:17.295529Z","iopub.status.idle":"2025-06-03T17:56:17.314298Z","shell.execute_reply.started":"2025-06-03T17:56:17.295516Z","shell.execute_reply":"2025-06-03T17:56:17.313449Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## 4. 이상치, 결측값 처리","metadata":{"_uuid":"30209df0-9280-4abe-ae22-712a92a047c3","_cell_guid":"4a2586c2-f5f7-4088-a7da-d8a224a40e1e","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"markdown","source":"[참고] Credit score classification 80% score 7 models\n\nhttps://www.kaggle.com/code/abdelaziznabil/credit-score-classification-80-score-7-models","metadata":{"_uuid":"4b682b2f-a007-4483-8b28-3a4121f9d34a","_cell_guid":"5dbb306d-7074-487f-ab36-c5f327bcf6f7","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"def Distribution(column, data, i):\n    fig, ax = plt.subplots(1, 2, figsize=(15, 5))\n    title = ['Before Distribution', 'After Distribution']\n    sns.set(style='whitegrid')\n    \n    if i == 0:\n        sns.kdeplot(data=data, x=column, ax=ax[0], color='r').set_title(title[i])\n        sns.boxplot(data=data, x=column, ax=ax[1], palette='magma').set_title(title[i])\n    else:\n        sns.kdeplot(data=data, x=column, ax=ax[0], color='#2171b5').set_title(title[i])\n        sns.boxplot(data=data, x=column, ax=ax[1], color='#2171b5').set_title(title[i])\n    \n    plt.tight_layout()","metadata":{"_uuid":"959ca325-0c11-41ea-8e68-fce4c6cec210","_cell_guid":"08fafad3-6152-4f41-be8a-3897057db664","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:17.314829Z","iopub.execute_input":"2025-06-03T17:56:17.315085Z","iopub.status.idle":"2025-06-03T17:56:17.328818Z","shell.execute_reply.started":"2025-06-03T17:56:17.315028Z","shell.execute_reply":"2025-06-03T17:56:17.328029Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## Age 만 나이","metadata":{"_uuid":"a774b455-02ae-49b5-870c-d93a33caba43","_cell_guid":"dcc491ee-6ccd-4be3-92e3-cb070d024556","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"# 전처리 전 시각화\nDistribution(column='Age',data=x,i=0)","metadata":{"_uuid":"6daae8b7-702e-41f5-956d-aa17294a9e29","_cell_guid":"cd673b2f-9114-49db-a530-03f8db320261","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:17.329487Z","iopub.execute_input":"2025-06-03T17:56:17.329694Z","iopub.status.idle":"2025-06-03T17:56:17.690140Z","shell.execute_reply.started":"2025-06-03T17:56:17.329675Z","shell.execute_reply":"2025-06-03T17:56:17.689438Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 이상치 처리 및 음수 제거: 20 ~ 100 범위 유효\nx.loc[(x['Age'] < 20) | (x['Age'] > 100), 'Age'] = np.nan\n\n# 결측값 처리: Occupation 그룹 기준 중앙값 대체\nx['Age'] = x.groupby('Occupation')['Age'].transform(lambda x: x.ffill().bfill())\nx['Age'].fillna(x['Age'].median(), inplace=True)","metadata":{"_uuid":"7dca44fd-1ea4-4ac8-9d52-2a3768526cf4","_cell_guid":"09e1de98-e512-4b7f-971c-e7f5f5fa4007","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:17.690726Z","iopub.execute_input":"2025-06-03T17:56:17.690976Z","iopub.status.idle":"2025-06-03T17:56:17.707754Z","shell.execute_reply.started":"2025-06-03T17:56:17.690937Z","shell.execute_reply":"2025-06-03T17:56:17.706912Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 전처리 후 시각화\nDistribution(column='Age',data=x,i=1)","metadata":{"_uuid":"16a8565d-5b3b-4aa2-90ea-24f14345a1af","_cell_guid":"f43b2a01-a19a-42c5-a9b6-7b17bfeeb7ed","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:17.708696Z","iopub.execute_input":"2025-06-03T17:56:17.708983Z","iopub.status.idle":"2025-06-03T17:56:18.275692Z","shell.execute_reply.started":"2025-06-03T17:56:17.708935Z","shell.execute_reply":"2025-06-03T17:56:18.274543Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## Annual_Income 연간 총 소득","metadata":{"_uuid":"4fce55f8-c33b-4385-bab8-93f65729a14e","_cell_guid":"322216eb-1b08-4bd3-a436-e0c52742c460","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"# 전처리 전 시각화\nDistribution(column='Annual_Income', data=x, i=0)","metadata":{"_uuid":"c5888d43-14fc-4190-a2aa-ac78a228548b","_cell_guid":"139770f2-be25-41bb-8d27-db71108dd071","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:18.276613Z","iopub.execute_input":"2025-06-03T17:56:18.276902Z","iopub.status.idle":"2025-06-03T17:56:19.035802Z","shell.execute_reply.started":"2025-06-03T17:56:18.276877Z","shell.execute_reply":"2025-06-03T17:56:19.035029Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 음수 또는 0 → NaN 처리\nx.loc[x['Annual_Income'] <= 0, 'Annual_Income'] = np.nan\n\n# 100만 초과도 NaN 처리\nx.loc[x['Annual_Income'] > 1_000_000, 'Annual_Income'] = np.nan\n\n# 결측값 처리\nx['Annual_Income'].fillna(x['Annual_Income'].median(), inplace=True)","metadata":{"_uuid":"d727638c-6f35-4dc5-acf6-b167ab52974b","_cell_guid":"155ba072-b128-428c-862e-cd8328697270","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:19.036642Z","iopub.execute_input":"2025-06-03T17:56:19.036871Z","iopub.status.idle":"2025-06-03T17:56:19.045455Z","shell.execute_reply.started":"2025-06-03T17:56:19.036853Z","shell.execute_reply":"2025-06-03T17:56:19.044486Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 전처리 후 시각화\nDistribution(column='Annual_Income', data=x, i=1)","metadata":{"_uuid":"45bb899d-c98a-453a-87d0-7558df98eb56","_cell_guid":"43800ec3-7f2a-4335-aad5-f8ea38d91398","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:19.046438Z","iopub.execute_input":"2025-06-03T17:56:19.046758Z","iopub.status.idle":"2025-06-03T17:56:19.629772Z","shell.execute_reply.started":"2025-06-03T17:56:19.046734Z","shell.execute_reply":"2025-06-03T17:56:19.628750Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## Monthly_Inhand_Salary 매월 실수령액","metadata":{"_uuid":"0c0c5a82-3e8e-4d52-8175-f1872299a700","_cell_guid":"aaee659a-fa0f-46cd-a615-cd2481f76cd4","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"# 전처리 전 시각화\nDistribution(column='Monthly_Inhand_Salary', data=x, i=0)","metadata":{"_uuid":"f95f3af2-c817-4f9b-be70-89683e1a18f8","_cell_guid":"5a842431-dbaa-4340-ab9d-fd5749571507","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:19.630616Z","iopub.execute_input":"2025-06-03T17:56:19.630845Z","iopub.status.idle":"2025-06-03T17:56:20.128016Z","shell.execute_reply.started":"2025-06-03T17:56:19.630825Z","shell.execute_reply":"2025-06-03T17:56:20.127010Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 결측값 처리: Annual_Income 기반 유추\nmiss_salary = x['Monthly_Inhand_Salary'].isna()\nx.loc[miss_salary, 'Monthly_Inhand_Salary'] = x.loc[miss_salary, 'Annual_Income'] / 12","metadata":{"_uuid":"9a2d394e-91da-4507-8204-38530080fd41","_cell_guid":"19a0076f-b18c-4bb6-bbaf-11fa25db7f64","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:20.129321Z","iopub.execute_input":"2025-06-03T17:56:20.129657Z","iopub.status.idle":"2025-06-03T17:56:20.136841Z","shell.execute_reply.started":"2025-06-03T17:56:20.129634Z","shell.execute_reply":"2025-06-03T17:56:20.135865Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 전처리 후 시각화\nDistribution(column='Monthly_Inhand_Salary', data=x, i=1)","metadata":{"_uuid":"dccacaa8-0a5e-40a7-aa5d-70660ce0c04c","_cell_guid":"e996cc1b-8859-417c-9c9c-33ee634ffb14","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:20.138136Z","iopub.execute_input":"2025-06-03T17:56:20.138404Z","iopub.status.idle":"2025-06-03T17:56:20.637785Z","shell.execute_reply.started":"2025-06-03T17:56:20.138383Z","shell.execute_reply":"2025-06-03T17:56:20.636940Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## Num_Bank_Accounts 보유 중인 은행 계좌 수","metadata":{"_uuid":"6a61d213-7b03-4157-a822-e223bd867dc8","_cell_guid":"bf490675-7415-41aa-93d8-fab73a4d89de","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"# 전처리 전 시각화\nDistribution(column='Num_Bank_Accounts', data=x, i=0)","metadata":{"_uuid":"44e64d85-e00c-4060-bd68-c1240563c5f8","_cell_guid":"1c7b39fe-8923-4ba5-b2c5-d1adc79a9d99","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:20.638881Z","iopub.execute_input":"2025-06-03T17:56:20.639166Z","iopub.status.idle":"2025-06-03T17:56:21.159484Z","shell.execute_reply.started":"2025-06-03T17:56:20.639145Z","shell.execute_reply":"2025-06-03T17:56:21.158405Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 이상치 처리: 0~11 범위 외 제거, 결측값은 최빈값으로 대체\nx.loc[(x['Num_Bank_Accounts'] < 0) | (x['Num_Bank_Accounts'] > 11), 'Num_Bank_Accounts'] = np.nan\nx['Num_Bank_Accounts'].fillna(x['Num_Bank_Accounts'].mode()[0], inplace=True)","metadata":{"_uuid":"23c4e24d-1b7a-41ba-a56c-c35f1d08d293","_cell_guid":"4bfe882b-0cae-4ae7-a819-7c7c92abc2ac","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:21.160340Z","iopub.execute_input":"2025-06-03T17:56:21.160566Z","iopub.status.idle":"2025-06-03T17:56:21.168257Z","shell.execute_reply.started":"2025-06-03T17:56:21.160550Z","shell.execute_reply":"2025-06-03T17:56:21.167333Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 전처리 후 시각화\nDistribution(column='Num_Bank_Accounts', data=x, i=1)","metadata":{"_uuid":"6ffa26d9-2ddd-48eb-a656-367357291c1c","_cell_guid":"29c38369-fbab-4c3e-bdfb-9014d1c86840","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:21.169127Z","iopub.execute_input":"2025-06-03T17:56:21.169875Z","iopub.status.idle":"2025-06-03T17:56:21.672420Z","shell.execute_reply.started":"2025-06-03T17:56:21.169848Z","shell.execute_reply":"2025-06-03T17:56:21.671628Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## Num_Credit_Card 보유 중인 신용카드 수","metadata":{"_uuid":"fc42fceb-095c-4deb-9833-e2db5baed630","_cell_guid":"a0083983-d47e-437c-bf9f-91c1512a47bf","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"# 전처리 전 시각화\nDistribution(column='Num_Credit_Card', data=x, i=0)","metadata":{"_uuid":"35d7b38f-7823-49dd-a43c-066450020f81","_cell_guid":"fbe278fa-2c4b-434e-a42a-733962c7a112","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:21.673379Z","iopub.execute_input":"2025-06-03T17:56:21.673654Z","iopub.status.idle":"2025-06-03T17:56:22.200074Z","shell.execute_reply.started":"2025-06-03T17:56:21.673632Z","shell.execute_reply":"2025-06-03T17:56:22.199166Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 이상치 처리: 11 초과 제거, 결측값은 최빈값으로 대체\nx.loc[x['Num_Credit_Card'] > 11, 'Num_Credit_Card'] = np.nan\nx['Num_Credit_Card'].fillna(x['Num_Credit_Card'].mode()[0], inplace=True)","metadata":{"_uuid":"3164ed36-325e-438f-a448-c145591567b2","_cell_guid":"037f830d-fbf6-4063-9c9b-6be34d779db5","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:22.200833Z","iopub.execute_input":"2025-06-03T17:56:22.201093Z","iopub.status.idle":"2025-06-03T17:56:22.208344Z","shell.execute_reply.started":"2025-06-03T17:56:22.201077Z","shell.execute_reply":"2025-06-03T17:56:22.207195Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 전처리 후 시각화\nDistribution(column='Num_Credit_Card', data=x, i=1)","metadata":{"_uuid":"c9e38346-0b23-47c9-aab3-fedd004f1085","_cell_guid":"5503eaea-9c71-4d4c-8c30-393b345e79cc","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:22.209408Z","iopub.execute_input":"2025-06-03T17:56:22.209663Z","iopub.status.idle":"2025-06-03T17:56:22.685945Z","shell.execute_reply.started":"2025-06-03T17:56:22.209645Z","shell.execute_reply":"2025-06-03T17:56:22.685128Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## Interest_Rate 대출 이자율","metadata":{"_uuid":"9b9fe736-4bbc-4c55-96fa-05a4c701f15c","_cell_guid":"20b344de-f95f-4f8f-bed2-659baaf72eda","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"# 전처리 전 시각화\nDistribution(column='Interest_Rate', data=x, i=0)","metadata":{"_uuid":"4627169c-c283-498e-82ef-1e4bd46e0f4b","_cell_guid":"9a7b2b78-9220-4c80-b5fd-b046004bf368","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:22.686753Z","iopub.execute_input":"2025-06-03T17:56:22.687011Z","iopub.status.idle":"2025-06-03T17:56:23.186193Z","shell.execute_reply.started":"2025-06-03T17:56:22.686991Z","shell.execute_reply":"2025-06-03T17:56:23.185463Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 이상치 처리: 34 초과 제거, 결측값은 최빈값으로 대체\nx.loc[x['Interest_Rate'] > 34, 'Interest_Rate'] = np.nan\nx['Interest_Rate'].fillna(x['Interest_Rate'].mode()[0], inplace=True)","metadata":{"_uuid":"c56552c4-3fd8-4752-abe1-e13ddb0b0ef1","_cell_guid":"4d6ccce7-6611-40c7-b118-f541249dfd03","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:23.186753Z","iopub.execute_input":"2025-06-03T17:56:23.186926Z","iopub.status.idle":"2025-06-03T17:56:23.193202Z","shell.execute_reply.started":"2025-06-03T17:56:23.186913Z","shell.execute_reply":"2025-06-03T17:56:23.192263Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 전처리 후 시각화\nDistribution(column='Interest_Rate', data=x, i=1)","metadata":{"_uuid":"0553827a-b450-4f9f-8f57-b16833ab1992","_cell_guid":"b45b7007-6c77-4bda-9f5e-d69644d0ccae","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:23.194100Z","iopub.execute_input":"2025-06-03T17:56:23.194354Z","iopub.status.idle":"2025-06-03T17:56:23.687531Z","shell.execute_reply.started":"2025-06-03T17:56:23.194334Z","shell.execute_reply":"2025-06-03T17:56:23.686659Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## Num_of_Loan 대출 건수","metadata":{"_uuid":"311490c8-2c7e-4bea-a7bc-854686b2ad20","_cell_guid":"ea2cad0b-413b-4268-8ce1-d9c0d502fbaf","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"# 전처리 전 시각화\nDistribution(column='Num_of_Loan', data=x, i=0)","metadata":{"_uuid":"db868f7c-04c1-43b8-b789-46d4acaf9d6b","_cell_guid":"5356955e-1f4e-403f-88b7-34551d388872","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:23.688414Z","iopub.execute_input":"2025-06-03T17:56:23.688666Z","iopub.status.idle":"2025-06-03T17:56:24.233347Z","shell.execute_reply.started":"2025-06-03T17:56:23.688645Z","shell.execute_reply":"2025-06-03T17:56:24.232319Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 이상치 제거: 음수 및 9 초과 제거, 결측값 중앙값 대체\nx.loc[(x['Num_of_Loan'] < 0) | (x['Num_of_Loan'] > 9), 'Num_of_Loan'] = np.nan\nx['Num_of_Loan'].fillna(x['Num_of_Loan'].median(), inplace=True)","metadata":{"_uuid":"c55b537b-1d4f-436d-94f7-2b35d0875508","_cell_guid":"3cff40f1-9709-498c-bce3-d13f7dab2ef3","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:24.239545Z","iopub.execute_input":"2025-06-03T17:56:24.239804Z","iopub.status.idle":"2025-06-03T17:56:24.247767Z","shell.execute_reply.started":"2025-06-03T17:56:24.239787Z","shell.execute_reply":"2025-06-03T17:56:24.246772Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 전처리 후 시각화\nDistribution(column='Num_of_Loan', data=x, i=1)","metadata":{"_uuid":"9ecc2c9a-db98-4e87-9272-27097f4942b5","_cell_guid":"549de259-7fe2-4df2-964d-9b646544c316","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:24.249084Z","iopub.execute_input":"2025-06-03T17:56:24.249448Z","iopub.status.idle":"2025-06-03T17:56:24.707596Z","shell.execute_reply.started":"2025-06-03T17:56:24.249423Z","shell.execute_reply":"2025-06-03T17:56:24.706433Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## Num_of_Delayed_Payment 연체 횟수","metadata":{"_uuid":"9e4b6068-1818-4da0-aad5-7564bf44c384","_cell_guid":"55763636-c28d-44a6-b119-a45be6bc764d","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"# 전처리 전 시각화\nDistribution(column='Num_of_Delayed_Payment', data=x, i=0)","metadata":{"_uuid":"d928e47d-1c59-4eb5-9dba-45150961836f","_cell_guid":"e5879e7d-1ef3-4c5f-8eba-1f51bc1c2f44","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:24.708983Z","iopub.execute_input":"2025-06-03T17:56:24.709305Z","iopub.status.idle":"2025-06-03T17:56:25.173639Z","shell.execute_reply.started":"2025-06-03T17:56:24.709283Z","shell.execute_reply":"2025-06-03T17:56:25.172702Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 이상치 제거: 음수 및 28 초과 제거, 중앙값 대체\nx.loc[(x['Num_of_Delayed_Payment'] < 0) | (x['Num_of_Delayed_Payment'] > 28), 'Num_of_Delayed_Payment'] = np.nan\nx['Num_of_Delayed_Payment'].fillna(x['Num_of_Delayed_Payment'].median(), inplace=True)","metadata":{"_uuid":"28536d2a-20ed-4f6f-a024-bcfaecbbf6e9","_cell_guid":"c41d5291-c488-472d-95d4-a6085970e0db","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:25.174497Z","iopub.execute_input":"2025-06-03T17:56:25.174701Z","iopub.status.idle":"2025-06-03T17:56:25.181796Z","shell.execute_reply.started":"2025-06-03T17:56:25.174686Z","shell.execute_reply":"2025-06-03T17:56:25.181027Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 전처리 후 시각화\nDistribution(column='Num_of_Delayed_Payment', data=x, i=1)","metadata":{"_uuid":"8eea68c6-0240-48f1-a640-7bcd23db254c","_cell_guid":"b27909c4-b5b4-4424-b90d-136b3f5634a0","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:25.182643Z","iopub.execute_input":"2025-06-03T17:56:25.182849Z","iopub.status.idle":"2025-06-03T17:56:25.657470Z","shell.execute_reply.started":"2025-06-03T17:56:25.182834Z","shell.execute_reply":"2025-06-03T17:56:25.656499Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## Num_Credit_Inquiries 신용 조회 횟수","metadata":{"_uuid":"48bd48da-7a32-42b9-b11c-e69cb5fd0203","_cell_guid":"4571158d-261b-4aba-aced-1d2258552687","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"# 전처리 전 시각화\nDistribution(column='Num_Credit_Inquiries', data=x, i=0)","metadata":{"_uuid":"d2004f45-ffe0-4fd0-b3ec-ce4bf3905dc0","_cell_guid":"fa18bda1-60da-4841-99fb-ad13df27d2ac","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:25.658363Z","iopub.execute_input":"2025-06-03T17:56:25.658664Z","iopub.status.idle":"2025-06-03T17:56:26.154064Z","shell.execute_reply.started":"2025-06-03T17:56:25.658641Z","shell.execute_reply":"2025-06-03T17:56:26.153248Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 결측값 처리: 중앙값 대체\nx['Num_Credit_Inquiries'].fillna(x['Num_Credit_Inquiries'].median(), inplace=True)","metadata":{"_uuid":"3f0b3356-11a9-4def-8c0a-186306771645","_cell_guid":"758eb497-bd99-4e18-a96b-737ef74f6548","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:26.154935Z","iopub.execute_input":"2025-06-03T17:56:26.155286Z","iopub.status.idle":"2025-06-03T17:56:26.161626Z","shell.execute_reply.started":"2025-06-03T17:56:26.155258Z","shell.execute_reply":"2025-06-03T17:56:26.160335Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 전처리 후 시각화\nDistribution(column='Num_Credit_Inquiries', data=x, i=1)","metadata":{"_uuid":"cd3ed559-cf29-491a-93d9-fb668a9837e9","_cell_guid":"3a5e4d3f-f093-420d-b310-550fc63d115f","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:26.162601Z","iopub.execute_input":"2025-06-03T17:56:26.162846Z","iopub.status.idle":"2025-06-03T17:56:26.651791Z","shell.execute_reply.started":"2025-06-03T17:56:26.162822Z","shell.execute_reply":"2025-06-03T17:56:26.650989Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## Outstanding_Debt 미상환 부채 금액","metadata":{"_uuid":"c05b3666-521e-4bbd-aac4-e0b3204ff8bf","_cell_guid":"8d839bb2-e552-40ae-ac22-8d3819414a24","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"# 전처리 전 시각화\nDistribution(column='Outstanding_Debt', data=x, i=0)","metadata":{"_uuid":"c5b65a06-d298-421b-bb52-a3d9f8e349c1","_cell_guid":"619bf76a-87b6-4731-ab1e-578b3b977890","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:26.652661Z","iopub.execute_input":"2025-06-03T17:56:26.652905Z","iopub.status.idle":"2025-06-03T17:56:27.101083Z","shell.execute_reply.started":"2025-06-03T17:56:26.652885Z","shell.execute_reply":"2025-06-03T17:56:27.100303Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 결측값 처리: 중앙값 대체\nx['Outstanding_Debt'].fillna(x['Outstanding_Debt'].median(), inplace=True)","metadata":{"_uuid":"d76f6c8f-50be-4eba-87f4-228971e43a60","_cell_guid":"2bca2bcc-df64-4ef0-9570-138f3043058c","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:27.101874Z","iopub.execute_input":"2025-06-03T17:56:27.102157Z","iopub.status.idle":"2025-06-03T17:56:27.107866Z","shell.execute_reply.started":"2025-06-03T17:56:27.102135Z","shell.execute_reply":"2025-06-03T17:56:27.107020Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 전처리 후 시각화\nDistribution(column='Outstanding_Debt', data=x, i=1)","metadata":{"_uuid":"2c6017b0-4f35-4b25-bf9f-0df57273c1d1","_cell_guid":"3c946935-a412-4e98-a284-b855537993c8","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:27.108870Z","iopub.execute_input":"2025-06-03T17:56:27.109198Z","iopub.status.idle":"2025-06-03T17:56:27.577613Z","shell.execute_reply.started":"2025-06-03T17:56:27.109178Z","shell.execute_reply":"2025-06-03T17:56:27.576584Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## Credit_Utilization_Ratio 신용 사용률 (사용 금액 / 한도)","metadata":{"_uuid":"fe7ad0a3-19c5-400a-96e0-5405d9e264fc","_cell_guid":"a9d4c523-5af8-45ab-b0a3-7a12b8925a3a","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"# 전처리 전 시각화\nDistribution(column='Credit_Utilization_Ratio', data=x, i=0)","metadata":{"_uuid":"27bba28f-b56a-4b7f-bbdb-df6d30d5be46","_cell_guid":"b4214bf2-23d4-4390-8569-ebe2c5b4f2af","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:27.578804Z","iopub.execute_input":"2025-06-03T17:56:27.579087Z","iopub.status.idle":"2025-06-03T17:56:28.081090Z","shell.execute_reply.started":"2025-06-03T17:56:27.579067Z","shell.execute_reply":"2025-06-03T17:56:28.080285Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 결측값 처리: 중앙값 대체\nx['Credit_Utilization_Ratio'].fillna(x['Credit_Utilization_Ratio'].median(), inplace=True)","metadata":{"_uuid":"8ceeab7d-a600-419d-83cb-908c32ac9e52","_cell_guid":"7394481e-8cb2-40c3-baeb-775dea3cab5b","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:28.081898Z","iopub.execute_input":"2025-06-03T17:56:28.082430Z","iopub.status.idle":"2025-06-03T17:56:28.086214Z","shell.execute_reply.started":"2025-06-03T17:56:28.082407Z","shell.execute_reply":"2025-06-03T17:56:28.085728Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 전처리 후 시각화\nDistribution(column='Credit_Utilization_Ratio', data=x, i=1)","metadata":{"_uuid":"630a37c6-cd06-4296-bb7e-68e987f9ed6d","_cell_guid":"0309dd63-4085-4a21-b6b0-14faa6c0fa14","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:28.086674Z","iopub.execute_input":"2025-06-03T17:56:28.086866Z","iopub.status.idle":"2025-06-03T17:56:28.600492Z","shell.execute_reply.started":"2025-06-03T17:56:28.086847Z","shell.execute_reply":"2025-06-03T17:56:28.599614Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## Total_EMI_per_month 월별 총 상환금 (원금 및 이자 포함)","metadata":{"_uuid":"c13387f1-e911-4b2c-a787-bdba498868d6","_cell_guid":"a0f1c5d7-861d-470e-832a-4dae805a8214","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"# 전처리 전 시각화\nDistribution(column='Total_EMI_per_month', data=x, i=0)","metadata":{"_uuid":"6a324ff5-5169-40c4-b815-d1530de3b2ab","_cell_guid":"d0243cea-19fe-4a8b-b530-3aa48110a0de","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:28.601437Z","iopub.execute_input":"2025-06-03T17:56:28.601699Z","iopub.status.idle":"2025-06-03T17:56:29.077189Z","shell.execute_reply.started":"2025-06-03T17:56:28.601677Z","shell.execute_reply":"2025-06-03T17:56:29.076014Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 결측값 처리: 중앙값 대체\nx['Total_EMI_per_month'].fillna(x['Total_EMI_per_month'].median(), inplace=True)","metadata":{"_uuid":"683b3e54-f2c3-42fb-8d3c-10e90793fee8","_cell_guid":"d10071f0-fbac-4fc8-a182-b20f221739f9","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:29.078158Z","iopub.execute_input":"2025-06-03T17:56:29.078461Z","iopub.status.idle":"2025-06-03T17:56:29.084242Z","shell.execute_reply.started":"2025-06-03T17:56:29.078434Z","shell.execute_reply":"2025-06-03T17:56:29.083482Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 전처리 후 시각화\nDistribution(column='Total_EMI_per_month', data=x, i=1)","metadata":{"_uuid":"1d90febb-ef39-48d7-b67e-3dbc94fcdc40","_cell_guid":"be00c2f1-bace-47f7-b852-9c6f12a5c78b","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:29.085121Z","iopub.execute_input":"2025-06-03T17:56:29.085393Z","iopub.status.idle":"2025-06-03T17:56:29.956805Z","shell.execute_reply.started":"2025-06-03T17:56:29.085374Z","shell.execute_reply":"2025-06-03T17:56:29.955020Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## Amount_invested_monthly 월별 투자 금액","metadata":{"_uuid":"4faa9464-f093-420f-990b-e591d72d6ff6","_cell_guid":"390257c5-61e7-4cd8-ab97-bade509af6c5","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"# 전처리 전 시각화\nDistribution(column='Amount_invested_monthly', data=x, i=0)","metadata":{"_uuid":"85d61f19-09b9-4c94-8049-c53d25b9bf3a","_cell_guid":"3a24fe05-db1e-4c05-bd63-a94de32ad2c0","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:29.957900Z","iopub.execute_input":"2025-06-03T17:56:29.958197Z","iopub.status.idle":"2025-06-03T17:56:30.478428Z","shell.execute_reply.started":"2025-06-03T17:56:29.958176Z","shell.execute_reply":"2025-06-03T17:56:30.477080Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 결측값 처리: 중앙값 대체\nx['Amount_invested_monthly'].fillna(x['Amount_invested_monthly'].median(), inplace=True)","metadata":{"_uuid":"b598b1dd-ee92-4b7e-8b7f-ad057c97c8ef","_cell_guid":"c6b7c0b4-3aa2-43db-b2d5-22432a0d02f9","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:30.479455Z","iopub.execute_input":"2025-06-03T17:56:30.480284Z","iopub.status.idle":"2025-06-03T17:56:30.485432Z","shell.execute_reply.started":"2025-06-03T17:56:30.480247Z","shell.execute_reply":"2025-06-03T17:56:30.484705Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 전처리 후 시각화\nDistribution(column='Amount_invested_monthly', data=x, i=1)","metadata":{"_uuid":"0857cee7-637d-4b13-9db5-e0e56dd46ece","_cell_guid":"ef469963-8116-4097-a85e-9fe358aa3b3c","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:30.486442Z","iopub.execute_input":"2025-06-03T17:56:30.486736Z","iopub.status.idle":"2025-06-03T17:56:31.019697Z","shell.execute_reply.started":"2025-06-03T17:56:30.486716Z","shell.execute_reply":"2025-06-03T17:56:31.018798Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## Monthly_Balance 월별 계좌 잔액","metadata":{"_uuid":"89e93aa2-885f-4f3c-a4f7-f7d8e0f9e255","_cell_guid":"154fec14-5c8e-4b9e-86d4-d206e6dfabfa","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"# 전처리 전 시각화\nDistribution(column='Monthly_Balance', data=x, i=0)","metadata":{"_uuid":"cec03922-b7fc-4304-9f66-9444aff8bac7","_cell_guid":"71b787ee-56a3-42bb-a91d-f6fcc7a1fe29","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:31.020617Z","iopub.execute_input":"2025-06-03T17:56:31.020895Z","iopub.status.idle":"2025-06-03T17:56:31.547003Z","shell.execute_reply.started":"2025-06-03T17:56:31.020876Z","shell.execute_reply":"2025-06-03T17:56:31.545997Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 결측값 처리: 중앙값 대체\nx['Monthly_Balance'].fillna(x['Monthly_Balance'].median(), inplace=True)","metadata":{"_uuid":"76b0fbd3-5cf8-4d9e-bee6-9ae5c81080bb","_cell_guid":"1d093f8f-aad6-483a-9468-2e0f9aa611e7","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:31.547889Z","iopub.execute_input":"2025-06-03T17:56:31.548163Z","iopub.status.idle":"2025-06-03T17:56:31.554257Z","shell.execute_reply.started":"2025-06-03T17:56:31.548144Z","shell.execute_reply":"2025-06-03T17:56:31.553330Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 전처리 후 시각화\nDistribution(column='Monthly_Balance', data=x, i=1)","metadata":{"_uuid":"e0a3efdc-398a-4b0a-8ee2-3167c83c9b93","_cell_guid":"c93ad421-f16a-49f7-aaf7-ea20446e7a44","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:31.555678Z","iopub.execute_input":"2025-06-03T17:56:31.556003Z","iopub.status.idle":"2025-06-03T17:56:32.089869Z","shell.execute_reply.started":"2025-06-03T17:56:31.555981Z","shell.execute_reply":"2025-06-03T17:56:32.088748Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## Credit_History_Months 신용 거래 기간 (월)","metadata":{"_uuid":"ae0bf7ac-9d32-4cfe-9b68-6c8de770e944","_cell_guid":"b194943c-57cf-48c1-bd15-b2392e613291","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"# 전처리 전 시각화\nDistribution(column='Credit_History_Months', data=x, i=0)","metadata":{"_uuid":"a2aed800-5310-4570-9210-c7728433b68c","_cell_guid":"8fa10734-42d0-43d5-8faa-073ed127d348","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:32.090692Z","iopub.execute_input":"2025-06-03T17:56:32.090912Z","iopub.status.idle":"2025-06-03T17:56:32.594191Z","shell.execute_reply.started":"2025-06-03T17:56:32.090895Z","shell.execute_reply":"2025-06-03T17:56:32.593157Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 이상치 제거: 720개월 초과 제거, 중앙값 대체\nx.loc[x['Credit_History_Months'] > 720, 'Credit_History_Months'] = np.nan\nx['Credit_History_Months'].fillna(x['Credit_History_Months'].median(), inplace=True)","metadata":{"_uuid":"bca385bd-8349-49bf-b2c6-c49d7e84b4ee","_cell_guid":"2ce7add9-2276-4281-bc8c-633de2ed2633","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:32.595121Z","iopub.execute_input":"2025-06-03T17:56:32.595368Z","iopub.status.idle":"2025-06-03T17:56:32.602254Z","shell.execute_reply.started":"2025-06-03T17:56:32.595349Z","shell.execute_reply":"2025-06-03T17:56:32.601357Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 전처리 후 시각화\nDistribution(column='Credit_History_Months', data=x, i=1)","metadata":{"_uuid":"79b77335-026c-4ad8-86f5-044c88b94e00","_cell_guid":"e06684b1-93dd-489f-a7ef-e2e04fd1e6e5","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:32.602910Z","iopub.execute_input":"2025-06-03T17:56:32.603122Z","iopub.status.idle":"2025-06-03T17:56:33.113902Z","shell.execute_reply.started":"2025-06-03T17:56:32.603106Z","shell.execute_reply":"2025-06-03T17:56:33.113031Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 이상치 클리핑 (IQR)\ndef clip_outliers(df, columns):\n    for col in columns:\n        Q1 = df[col].quantile(0.25)\n        Q3 = df[col].quantile(0.75)\n        IQR = Q3 - Q1\n        lower_bound = Q1 - 1.5 * IQR\n        upper_bound = Q3 + 1.5 * IQR\n        df[col] = df[col].clip(lower=lower_bound, upper=upper_bound)\n\n# 클리핑 적용 대상 변수\nclip_columns = [\n    'Annual_Income', 'Delay_from_due_date', 'Num_Credit_Inquiries', 'Outstanding_Debt',\n    'Monthly_Inhand_Salary', 'Credit_Utilization_Ratio', 'Total_EMI_per_month',\n    'Amount_invested_monthly', 'Monthly_Balance', 'Num_Credit_Inquiries', 'Outstanding_Debt'\n]\n\n# 이상치 클리핑 실행\nclip_outliers(x, clip_columns)","metadata":{"_uuid":"649e2a31-eb9d-436c-8890-a6b0b12b1637","_cell_guid":"a8e2d859-0887-48e3-be52-d109af9382b6","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:33.114823Z","iopub.execute_input":"2025-06-03T17:56:33.115131Z","iopub.status.idle":"2025-06-03T17:56:33.143443Z","shell.execute_reply.started":"2025-06-03T17:56:33.115112Z","shell.execute_reply":"2025-06-03T17:56:33.142771Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 이상치 boxplot 시각화\ndef plot_multiple_outliers(df):\n    numeric_cols = df.select_dtypes(include=['number']).columns\n    n = len(numeric_cols)\n\n    plt.figure(figsize=(10, 2 * n))\n\n    for i, col in enumerate(numeric_cols, 1):\n        plt.subplot(n, 1, i)\n        sns.boxplot(x=df[col])\n        plt.title(f'Boxplot for {col}')\n        plt.tight_layout()\n\n    plt.show()\n\n# 이상치 시각화 실행\nplot_multiple_outliers(x)","metadata":{"_uuid":"4406b891-3d98-41e7-bb2b-13ea52638125","_cell_guid":"4ecaddad-4c68-4ea0-8c0a-44a464f994e9","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:33.144151Z","iopub.execute_input":"2025-06-03T17:56:33.144336Z","iopub.status.idle":"2025-06-03T17:56:39.464412Z","shell.execute_reply.started":"2025-06-03T17:56:33.144320Z","shell.execute_reply":"2025-06-03T17:56:39.462093Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"x","metadata":{"_uuid":"f2b27892-ea4b-4f25-94ec-f50da6522c7e","_cell_guid":"4382f6ba-7cfa-442b-b0a8-2cc81858fa00","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:39.465119Z","iopub.execute_input":"2025-06-03T17:56:39.465415Z","iopub.status.idle":"2025-06-03T17:56:39.484117Z","shell.execute_reply.started":"2025-06-03T17:56:39.465390Z","shell.execute_reply":"2025-06-03T17:56:39.483124Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"x.describe().T","metadata":{"_uuid":"1c9bd9cc-d677-4c15-99da-25901e6dc40b","_cell_guid":"5c6b66a9-de89-41cd-b717-76759285dbb5","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:39.485359Z","iopub.execute_input":"2025-06-03T17:56:39.485673Z","iopub.status.idle":"2025-06-03T17:56:39.540352Z","shell.execute_reply.started":"2025-06-03T17:56:39.485650Z","shell.execute_reply":"2025-06-03T17:56:39.539596Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"x.isna().sum()","metadata":{"_uuid":"4e9cadb2-3bba-4a9b-bda6-e3059a6dc070","_cell_guid":"30a1c97f-dcd1-4907-aa16-db7fde187c3c","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:39.541645Z","iopub.execute_input":"2025-06-03T17:56:39.541984Z","iopub.status.idle":"2025-06-03T17:56:39.551124Z","shell.execute_reply.started":"2025-06-03T17:56:39.541937Z","shell.execute_reply":"2025-06-03T17:56:39.550282Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"x.info()","metadata":{"_uuid":"0dcc1feb-2ff7-4aec-8453-91f1c1cc03e8","_cell_guid":"2196e612-5a24-4392-9348-0585df776cf3","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:39.552046Z","iopub.execute_input":"2025-06-03T17:56:39.552276Z","iopub.status.idle":"2025-06-03T17:56:39.576319Z","shell.execute_reply.started":"2025-06-03T17:56:39.552254Z","shell.execute_reply":"2025-06-03T17:56:39.575444Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## 5. 파생변수","metadata":{"_uuid":"5dbfd4e4-ee7f-4ede-9dae-4ae839c560d4","_cell_guid":"77a36aca-3911-4173-a3b5-97dac02a4e3c","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"x['Interest_Stress'] = x['Interest_Rate'] * x['Outstanding_Debt']\nx['Late_Payment_Score'] = x['Delay_from_due_date'] * x['Num_of_Delayed_Payment']\nx['Risk_Score'] = (\n    x['Monthly_Balance'] / (x['Total_EMI_per_month'] + 1) * 0.3 +\n    x['Late_Payment_Score'] * 0.3 +\n    x['Interest_Stress'] * 0.4\n)\nx['Delayed_Payment_Ratio'] = x['Num_of_Delayed_Payment'] / (x['Credit_History_Months'] + 1)\nx['Debt_to_Salary'] = x['Outstanding_Debt'] / (x['Monthly_Inhand_Salary'] + 1)\nx['EMI_to_Salary'] = x['Total_EMI_per_month'] / (x['Monthly_Inhand_Salary'] + 1)\nx['Credit_Age_Index'] = x['Credit_History_Months'] / (x['Age'] + 1)\nx['Balance_to_EMI'] = x['Monthly_Balance'] / (x['Total_EMI_per_month'] + 1)\n\n# 핵심 파생 변수만 결측치/무한치 처리\nderived_cols = [\n    'Interest_Stress', 'Late_Payment_Score', 'Risk_Score',\n    'Delayed_Payment_Ratio', 'Debt_to_Salary',\n    'EMI_to_Salary', 'Credit_Age_Index', 'Balance_to_EMI'\n]\nx[derived_cols] = x[derived_cols].replace([np.inf, -np.inf], np.nan)\nx[derived_cols] = x[derived_cols].fillna(x[derived_cols].median(numeric_only=True))","metadata":{"_uuid":"a00dcad1-5220-4e08-8134-275c5b33757a","_cell_guid":"b04e169b-61eb-4711-b1c3-f57a65fe1458","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:39.577144Z","iopub.execute_input":"2025-06-03T17:56:39.577395Z","iopub.status.idle":"2025-06-03T17:56:39.596693Z","shell.execute_reply.started":"2025-06-03T17:56:39.577372Z","shell.execute_reply":"2025-06-03T17:56:39.595426Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## 6. 전처리 이후 데이터 분리","metadata":{"_uuid":"dacde102-41e0-47d3-86cb-033d840f1817","_cell_guid":"35bc4f60-080a-43b9-8c82-f12b15b5aa1a","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"# is_train 값이 1인 데이터는 학습용, 0인 데이터는 테스트용으로 분리\n# 분리 후 'is_train' 컬럼은 필요 없으므로 drop\nx_train = x[x['is_train'] == 1].drop(columns='is_train')\nx_test = x[x['is_train'] == 0].drop(columns='is_train')","metadata":{"_uuid":"2f0a0795-b352-47f4-acca-9d899d6f0a6c","_cell_guid":"fcef99f0-60de-48d3-985d-e284a1d55eb7","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:39.597403Z","iopub.execute_input":"2025-06-03T17:56:39.597618Z","iopub.status.idle":"2025-06-03T17:56:39.627932Z","shell.execute_reply.started":"2025-06-03T17:56:39.597605Z","shell.execute_reply":"2025-06-03T17:56:39.627051Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"x_train.shape, x_test.shape","metadata":{"_uuid":"8a60a1a1-9ec9-4c78-a136-f9321d7a84eb","_cell_guid":"fb5bec11-6f9d-41c3-9ea7-c7c3ef028ce8","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:39.756352Z","iopub.execute_input":"2025-06-03T17:56:39.756512Z","iopub.status.idle":"2025-06-03T17:56:39.761408Z","shell.execute_reply.started":"2025-06-03T17:56:39.756499Z","shell.execute_reply":"2025-06-03T17:56:39.760287Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"x_train.info()","metadata":{"_uuid":"ee9fb777-54ec-468c-97b9-aefc3ba42852","_cell_guid":"abb283a4-c42b-4d04-ae2f-2ef3268dd95d","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:39.762200Z","iopub.execute_input":"2025-06-03T17:56:39.762429Z","iopub.status.idle":"2025-06-03T17:56:39.784231Z","shell.execute_reply.started":"2025-06-03T17:56:39.762410Z","shell.execute_reply":"2025-06-03T17:56:39.783464Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"x_test.info()","metadata":{"_uuid":"ec511f6e-e9a7-4739-b6ba-90660488475d","_cell_guid":"eb968ca7-7c9c-4db3-943d-3531af13679e","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:39.784936Z","iopub.execute_input":"2025-06-03T17:56:39.785399Z","iopub.status.idle":"2025-06-03T17:56:39.795826Z","shell.execute_reply.started":"2025-06-03T17:56:39.785383Z","shell.execute_reply":"2025-06-03T17:56:39.795129Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## 7. 변수 상관관계 분석","metadata":{"_uuid":"d20b160f-33d5-46dc-9382-ba583de84d32","_cell_guid":"bc1544f2-b15c-426c-bafe-0fa1854c69cc","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"markdown","source":"[참고] Credit Score Multi-Class Classification Part:2 ML\n\n - https://www.kaggle.com/code/clkmuhammed/credit-score-multi-class-classification-part-2-ml#Import-Libraries","metadata":{"_uuid":"cc9ecbc5-c833-4d2c-bda8-94392a5100c5","_cell_guid":"fcae892b-894f-4642-8dd4-ae0efdf4ed73","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"# 변수 간 상관관계\nnumeric_cols = x_train.select_dtypes(include='number').columns\n\n# 상관관계 행렬 계산\ncorr_matrix = x_train[numeric_cols].corr()\n\n# 히트맵 시각화\nplt.figure(figsize=(16, 12))\nsns.heatmap(corr_matrix, annot=True, fmt=\".2f\", cmap='coolwarm', square=True, linewidths=0.5)\nplt.title('Correlation Heatmap (Numeric Features)', fontsize=16)\nplt.tight_layout()\nplt.show()","metadata":{"_uuid":"7bd35164-8d02-430d-8d0e-c208e82f2f53","_cell_guid":"c3d6ef34-769a-42d4-85ad-272d4261c4ce","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:39.866240Z","iopub.execute_input":"2025-06-03T17:56:39.866645Z","iopub.status.idle":"2025-06-03T17:56:42.954152Z","shell.execute_reply.started":"2025-06-03T17:56:39.866611Z","shell.execute_reply":"2025-06-03T17:56:42.952991Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Credit_Score 클래스 분포\ntrain = pd.concat([x_train, y_train], axis=1)\n\nplt.figure(figsize=(6, 4))\nsns.countplot(x='Credit_Score', data=train, palette='Set2')\n\nplt.xlabel('Credit Class')\nplt.ylabel('Count')\nplt.show()","metadata":{"_uuid":"99567e52-efed-4263-8b4a-367bf7d536c4","_cell_guid":"821ca846-f660-4931-9741-9ecd42167349","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2025-06-03T17:56:42.955126Z","iopub.execute_input":"2025-06-03T17:56:42.955369Z","iopub.status.idle":"2025-06-03T17:56:43.061684Z","shell.execute_reply.started":"2025-06-03T17:56:42.955351Z","shell.execute_reply":"2025-06-03T17:56:43.060830Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 수치형 변수 자동 선택\nnumeric_cols = train.select_dtypes(include=['int64', 'float64']).columns.tolist()\n\n# Credit_Score는 범주형 기준이므로 제외하지 않음\nncols = 3\nnrows = (len(numeric_cols) + ncols - 1) // ncols\nplt.figure(figsize=(16, 5 * nrows))\n\nfor i, col in enumerate(numeric_cols):\n    plt.subplot(nrows, ncols, i + 1)\n    sns.boxplot(data=train, x='Credit_Score', y=col, palette='Set2')\n    plt.title(f'{col}')\n\nplt.tight_layout()\nplt.show()","metadata":{"_uuid":"2ee41263-bf9c-4b88-99a6-f400280f4731","_cell_guid":"2dd8da21-04e0-45cf-9687-11fe0961fe13","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:43.062494Z","iopub.execute_input":"2025-06-03T17:56:43.062698Z","iopub.status.idle":"2025-06-03T17:56:49.962072Z","shell.execute_reply.started":"2025-06-03T17:56:43.062683Z","shell.execute_reply":"2025-06-03T17:56:49.960905Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# 모델링","metadata":{"_uuid":"a367ac4b-b647-4936-8862-f4a7dbaa6cc6","_cell_guid":"7abb6393-a1c2-469c-a184-0422e3e62e26","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"markdown","source":"## 1. SHAP 시각화","metadata":{"_uuid":"68dbe0ee-87f2-45c2-be0d-0214c0b93cdc","_cell_guid":"5189f1ac-d7b2-4e83-a91e-c22468f21d06","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"markdown","source":"[참고] XGBoost explainability with SHAP\nhttps://www.kaggle.com/code/bryanb/xgboost-explainability-with-shap\n\n머신러닝 모델은 예측 정확도는 높지만, 그 결과가 왜 그렇게 나왔는지 해석하기 어려운 경우가 많습니다.\n특히 XGBoost, RandomForest, CatBoost 같은 복잡한 앙상블 모델은 내부 구조가 블랙박스처럼 작동하여,\n각 피처가 예측에 어떤 영향을 주었는지 파악하기 힘든 문제가 발생합니다.\n\n즉, 모델은 잘 작동하고 있지만, '왜 그렇게 예측했는가?'에 대한 설명이 부족하기 때문에\n결정에 대한 신뢰도가 떨어지고, 실제 적용 현장에서 문제가 발생할 수 있습니다.\n\n이러한 상황에서 SHAP은 각 피처가 예측 결과에 얼마나, 어떻게 영향을 미쳤는지를 정량적으로 설명해줍니다.\n각 피처의 기여도를 수치로 표현할 뿐만 아니라, 이를 직관적인 시각화로 제공하여\n복잡한 모델의 예측 과정을 사람도 이해할 수 있도록 돕는 도구입니다.","metadata":{"_uuid":"6989988c-7c75-4e9d-a253-8e65c16fb56c","_cell_guid":"ff13601f-bb60-4461-8174-95cf7d325494","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"# 중요 변수 선택 전 XGBoost 학습\nxgb_model = XGBClassifier(use_label_encoder=False, eval_metric='mlogloss', random_state=42)\nxgb_model.fit(x_train, y_train.values.ravel())","metadata":{"_uuid":"bac00caa-f129-4a4a-83f4-5d2f66292a82","_cell_guid":"30b1c53d-cec2-42b1-9f5d-d0135419b623","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:49.963135Z","iopub.execute_input":"2025-06-03T17:56:49.963423Z","iopub.status.idle":"2025-06-03T17:56:50.827872Z","shell.execute_reply.started":"2025-06-03T17:56:49.963400Z","shell.execute_reply":"2025-06-03T17:56:50.827028Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# SHAP 시각화 (Top 30 features)\nexplainer = shap.TreeExplainer(xgb_model)\nshap_values = explainer.shap_values(x_train)\n\nshap.summary_plot(shap_values, x_train, plot_type=\"bar\", max_display=30)","metadata":{"_uuid":"81097e6d-6c05-4982-80b9-6f75d5723385","_cell_guid":"b965f590-fffd-451a-9466-b5a91c1b960f","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:56:50.828776Z","iopub.execute_input":"2025-06-03T17:56:50.829066Z","iopub.status.idle":"2025-06-03T17:57:02.004322Z","shell.execute_reply.started":"2025-06-03T17:56:50.829038Z","shell.execute_reply":"2025-06-03T17:57:02.003244Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 중요 변수 15개 추출 및 선택\nimportance = xgb_model.feature_importances_\nimportance_df = pd.DataFrame({'feature': x_train.columns, 'importance': importance})\nselected_c = importance_df.sort_values(by='importance', ascending=False)['feature'].head(15).tolist()\n\nx_train_top = x_train[selected_c].copy()\nx_test_top = x_test[selected_c].copy()","metadata":{"_uuid":"ca8dc176-d5a8-4659-9af8-d59319639519","_cell_guid":"21a0a1e2-53c2-440e-8ebb-5fbf1d214f0a","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:57:02.005335Z","iopub.execute_input":"2025-06-03T17:57:02.005617Z","iopub.status.idle":"2025-06-03T17:57:02.015135Z","shell.execute_reply.started":"2025-06-03T17:57:02.005594Z","shell.execute_reply":"2025-06-03T17:57:02.014187Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 클래스 가중치 자동 계산\nclass_weights = compute_class_weight(class_weight='balanced',\n                                     classes=np.unique(y_train['Credit_Score']),\n                                     y=y_train['Credit_Score'])\n\n# 딕셔너리 형태로 변환\nclass_weight_dict = dict(zip(np.unique(y_train['Credit_Score']), class_weights))\nprint(\"클래스 가중치:\", class_weight_dict)","metadata":{"_uuid":"c5d08864-376b-48af-b74f-58fc95a51228","_cell_guid":"8384ad94-9ad9-4d42-8362-4bb4a9f05ac6","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:57:02.016109Z","iopub.execute_input":"2025-06-03T17:57:02.016384Z","iopub.status.idle":"2025-06-03T17:57:02.039014Z","shell.execute_reply.started":"2025-06-03T17:57:02.016362Z","shell.execute_reply":"2025-06-03T17:57:02.038261Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"*SMOTE 적용*","metadata":{"_uuid":"471c8761-b704-4c94-9160-10dbf8b8147a","_cell_guid":"54029a25-a845-46d5-8c81-d9a5a62e85ef","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"markdown","source":"[참고] IQR을 이용한 Outlier 탐지 + SMOTE Oversampling\n - https://www.kaggle.com/code/dogdriip/iqr-outlier-smote-oversampling/code#SMOTE-%EC%98%A4%EB%B2%84%EC%83%98%ED%94%8C%EB%A7%81-%EC%A0%81%EC%9A%A9\n\n\n**SMOTE 오버샘플링 적용**\n\n레이블이 불균형한 분포를 가진 데이터 세트를 학습시킬 때 예측 성능의 문제가 발생할 수 있는데, 이는 이상 레이블을 가지는 데이터 건수가 정상 레이블을 가진 데이터 건수에 비해 너무 적기 때문에 발생합니다. 즉 이상 레이블을 가지는 데이터 건수는 매우 적기 때문에 제대로 다양한 유형을 학습하지 못하는 반면, 정상 레이블을 가지는 데이터 건수는 매우 많기 때문에 일방적으로 정상 레이블로 치우친 학습을 수행해 제대로 된 이상 데이터 검출이 어려워지기 쉽습니다.\n\n오버 샘플링은 이상 데이터와 같이 적은 데이터 세트를 증식하여 학습을 위한 충분한 데이터를 확보하는 방법입니다. 원본 데이터의 피쳐 값들을 아주 약간만 변경하여 증식합니다. 대표적으로 SMOTE(Synthetic Minority Over-sampling Technique) 방법이 있습니다. SMOTE는 적은 데이터 세트에 있는 개별 데이터들의 K-Nearest-Neighbor를 찾아서 이 데이터와 K개 이웃들의 차이를 일정 값으로 만들어서 기존 데이터와 약간 차이가 나는 새로운 데이터들을 생성하는 방식입니다.","metadata":{"_uuid":"f1e4318e-a7a9-4a84-858c-7bf49883a82d","_cell_guid":"4ac311ce-8e5c-4f50-a307-5d9eae8e80be","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"# 전체에서 분리\nx_full, y_full = x_train_top.copy(), y_train.values.ravel()\n\nx_train_split, x_val_split, y_train_split, y_val_split = train_test_split(\n    x_full, y_full, test_size=0.2, stratify=y_full, random_state=42\n)\n\nx_test_final = x_test_top.copy()\n\n# 하이퍼파라미터 튜닝용 변수\nx_trn, y_trn = x_train_split.copy(), y_train_split.copy()","metadata":{"_uuid":"e557c0fd-1ba2-4ed8-8ca6-8ede8d20e272","_cell_guid":"8956c405-c11f-401a-8b46-0c77f8103456","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:57:02.039719Z","iopub.execute_input":"2025-06-03T17:57:02.039893Z","iopub.status.idle":"2025-06-03T17:57:02.065749Z","shell.execute_reply.started":"2025-06-03T17:57:02.039879Z","shell.execute_reply":"2025-06-03T17:57:02.064451Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## 3. 각 모델 선정 및 최적 하이퍼파라미터 설정","metadata":{"_uuid":"d4a2f8ce-61ac-45ce-8e91-a04ceae36a7a","_cell_guid":"2138f3a0-81be-46d3-8363-e3608784fc3d","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"# 각 모델과 최적 하이퍼파라미터 설정\nrf = RandomForestClassifier(random_state=42, class_weight=class_weight_dict)\nrf_params = {\n    'n_estimators': [200, 300],\n    'max_depth': [10, 12],  # 기존보다 축소\n    'min_samples_split': [4, 6],\n    'min_samples_leaf': [2, 4],  # 추가\n    'max_features': ['sqrt']\n}\n\nxgb = XGBClassifier(use_label_encoder=False, eval_metric='mlogloss', random_state=42)\nxgb_params = {\n    'n_estimators': [200, 300],\n    'learning_rate': [0.03, 0.05],\n    'max_depth': [6, 8],\n    'subsample': [0.8],\n    'colsample_bytree': [1.0],\n    'gamma': [0.1, 0.3]\n}\n\ngb = GradientBoostingClassifier(random_state=42)\ngb_params = {\n    'n_estimators': [100, 200],\n    'max_depth': [5, 6],\n    'learning_rate': [0.01, 0.05],\n    'subsample': [0.6, 0.8]\n}","metadata":{"_uuid":"2d6ba306-5b5d-4336-a28c-031366089262","_cell_guid":"085866bf-7ea1-41fb-80ce-f796c3f683ac","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:57:02.066495Z","iopub.execute_input":"2025-06-03T17:57:02.066705Z","iopub.status.idle":"2025-06-03T17:57:02.078596Z","shell.execute_reply.started":"2025-06-03T17:57:02.066690Z","shell.execute_reply":"2025-06-03T17:57:02.077826Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 모델별 RandomizedSearchCV 실행하여 최적 하이퍼파라미터 선정\ndef tune_model(model, param_grid, name='model'):\n    search = RandomizedSearchCV(model, param_distributions=param_grid, n_iter=20,\n                                scoring='f1_macro', cv=3, verbose=1, random_state=42, n_jobs=-1)\n    search.fit(x_trn, y_trn)\n    \n    # 최적 하이퍼파라미터 출력 및 저장\n    print(f\"\\n{name} Best Params:\", search.best_params_)\n    return search.best_estimator_, search.best_params_\n\n# 하이퍼파라미터 튜닝 실행\nprint(\"\\nRandomForest\")\nbest_rf, best_rf_params = tune_model(rf, rf_params, name=\"RandomForest\")\n\nprint(\"\\nXGBoost\")\nbest_xgb, best_xgb_params = tune_model(xgb, xgb_params, name=\"XGBoost\")\n\nprint(\"\\nGradientBoosting\")\nbest_gb, best_gb_params = tune_model(gb, gb_params, name=\"GradientBoosting\")","metadata":{"_uuid":"1edd5d1f-01a6-4433-8549-66bee1a88586","_cell_guid":"e2109ece-c1b8-47a6-acde-ac0b4a5a9bcd","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T17:57:02.079406Z","iopub.execute_input":"2025-06-03T17:57:02.079649Z","iopub.status.idle":"2025-06-03T18:00:43.461060Z","shell.execute_reply.started":"2025-06-03T17:57:02.079628Z","shell.execute_reply":"2025-06-03T18:00:43.460050Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"base_models = [\n    ('rf', best_rf),\n    ('xgb', best_xgb),\n    ('gb', best_gb),\n]","metadata":{"_uuid":"5fdd749d-b700-4eeb-885b-339d02c93a68","_cell_guid":"a723938a-4e48-445e-b325-10e48a064ae1","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2025-06-03T18:00:43.462093Z","iopub.execute_input":"2025-06-03T18:00:43.462381Z","iopub.status.idle":"2025-06-03T18:00:43.467397Z","shell.execute_reply.started":"2025-06-03T18:00:43.462362Z","shell.execute_reply":"2025-06-03T18:00:43.466326Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"meta_model = XGBClassifier(\n    **best_xgb_params,\n    reg_alpha=1.0,        # L1 penalty\n    reg_lambda=1.5,       # L2 penalty\n    use_label_encoder=False,\n    eval_metric='mlogloss',\n    random_state=42\n)","metadata":{"_uuid":"3ed29a4e-1b39-41da-8ada-fba242714a54","_cell_guid":"8195f5b8-cb7c-47c3-a122-41ff6407f25c","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2025-06-03T18:00:43.468383Z","iopub.execute_input":"2025-06-03T18:00:43.468645Z","iopub.status.idle":"2025-06-03T18:00:43.490319Z","shell.execute_reply.started":"2025-06-03T18:00:43.468627Z","shell.execute_reply":"2025-06-03T18:00:43.488899Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"stack_model = StackingClassifier(\n    estimators=base_models,\n    final_estimator=meta_model,\n    stack_method='predict',\n    cv=5,\n    passthrough=False,\n    n_jobs=-1\n)","metadata":{"_uuid":"21d615a1-88ae-421b-aec4-6844bc88c6a3","_cell_guid":"4a9e212a-5b44-43d3-947f-dbdd3fd3a91e","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2025-06-03T18:00:43.491476Z","iopub.execute_input":"2025-06-03T18:00:43.492042Z","iopub.status.idle":"2025-06-03T18:00:43.510684Z","shell.execute_reply.started":"2025-06-03T18:00:43.492011Z","shell.execute_reply":"2025-06-03T18:00:43.509743Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## 4. 개별 모델별 성능 평가","metadata":{"_uuid":"7b1f9dce-9604-435e-a80d-74a5c5d34ae9","_cell_guid":"d9655f68-505c-420d-9561-1012a0716a15","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"def evaluate(model_name, model, x_data, y_true):\n    y_pred = model.predict(x_data)\n    acc = accuracy_score(y_true, y_pred)\n    f1 = f1_score(y_true, y_pred, average='macro')\n    \n    print(f\"\\n===== [{model_name}] 평가 =====\")\n    print(f\"Accuracy : {acc:.4f}\")\n    print(f\"Macro F1 : {f1:.4f}\")\n    print(\"Classification Report:\")\n    print(classification_report(y_true, y_pred, digits=4))\n    \n    # 혼동 행렬 시각화\n    cm = confusion_matrix(y_true, y_pred)\n    plt.figure(figsize=(6,5))\n    sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=[0,1,2], yticklabels=[0,1,2])\n    plt.title(f\"{model_name} - Confusion Matrix\")\n    plt.xlabel(\"Predicted\")\n    plt.ylabel(\"True\")\n    plt.tight_layout()\n    plt.show()\n    \n    return acc, f1","metadata":{"_uuid":"1708d60e-c841-40b6-9047-b7438a50df16","_cell_guid":"8622c3da-d757-4389-a075-6b4c36df2ba0","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T18:00:43.511776Z","iopub.execute_input":"2025-06-03T18:00:43.512042Z","iopub.status.idle":"2025-06-03T18:00:43.538410Z","shell.execute_reply.started":"2025-06-03T18:00:43.512016Z","shell.execute_reply":"2025-06-03T18:00:43.537423Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"def full_model_analysis(model_name, model, x_train_split, y_train_split, x_val_split, y_val_split, x_full, y_full, x_test_final):\n    print(f\"\\n=== 모델 분석 시작: {model_name} ===\")\n\n    print(\"\\n[1] Train Set\")\n    evaluate(f\"{model_name} - Train\", model, x_train_split, y_train_split)\n\n    print(\"\\n[2] Validation Set\")\n    evaluate(f\"{model_name} - Validation\", model, x_val_split, y_val_split)\n\n    print(\"\\n[3] Full Train Set \")\n    evaluate(f\"{model_name} - Full Train\", model, x_full, y_full)\n\n    print(\"\\n[4] Test Set 예측 결과 (상위 10개)\")\n    y_test_pred = model.predict(x_test_final)\n    print(\"예측 샘플:\", y_test_pred[:10])\n\n    return y_test_pred","metadata":{"_uuid":"76744ca8-06cf-462d-810a-0d9c57153d25","_cell_guid":"9fc4d7d4-8417-43f0-a766-58a4c2333f57","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T18:00:43.539676Z","iopub.execute_input":"2025-06-03T18:00:43.540004Z","iopub.status.idle":"2025-06-03T18:00:43.559175Z","shell.execute_reply.started":"2025-06-03T18:00:43.539974Z","shell.execute_reply":"2025-06-03T18:00:43.558309Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"def kfold_model_analysis(model_name, model, x, y, x_test_final, n_splits=5, verbose=True):\n    print(f\"\\n=== [KFold] {model_name} 시작 ===\")\n\n    skf = StratifiedKFold(n_splits=n_splits, shuffle=True, random_state=42)\n    f1_scores = []\n    test_preds = []\n\n    for fold, (train_idx, val_idx) in enumerate(skf.split(x, y)):\n        x_train, x_val = x.iloc[train_idx], x.iloc[val_idx]\n\n        if isinstance(y, pd.Series):\n            y_train, y_val = y.iloc[train_idx], y.iloc[val_idx]\n        else:\n            y_train, y_val = y[train_idx], y[val_idx]\n\n        model.fit(x_train, y_train)\n        val_preds = model.predict(x_val)\n        f1 = f1_score(y_val, val_preds, average='macro')\n        f1_scores.append(f1)\n\n        if verbose:\n            print(f\"\\nFold {fold+1} - Macro F1: {f1:.4f}\")\n            print(classification_report(y_val, val_preds))\n\n        # 예측 시 컬럼 동일하게 정렬\n        test_preds.append(model.predict(x_test_final[x_train.columns]))\n\n    print(f\"\\n평균 Macro F1: {np.mean(f1_scores):.4f} ± {np.std(f1_scores):.4f}\")\n    return np.mean(f1_scores)","metadata":{"_uuid":"1cde52d2-d9b9-47f8-bb4b-f5a244454a4e","_cell_guid":"f31a1be6-c870-4108-9aed-91b85ac8a2bb","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T18:00:43.560167Z","iopub.execute_input":"2025-06-03T18:00:43.560430Z","iopub.status.idle":"2025-06-03T18:00:43.586157Z","shell.execute_reply.started":"2025-06-03T18:00:43.560408Z","shell.execute_reply":"2025-06-03T18:00:43.584761Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 모델 학습\nbest_rf.fit(x_train_split, y_train_split)\nbest_xgb.fit(x_train_split, y_train_split)\nbest_gb.fit(x_train_split, y_train_split)\nstack_model.fit(x_train_split, y_train_split)\n\n# 모델별 평가 실행\nrf_preds = full_model_analysis(\"RandomForest\", best_rf, x_train_split, y_train_split, x_val_split, y_val_split, x_full, y_full, x_test_final)\nxgb_preds = full_model_analysis(\"XGBoost\", best_xgb, x_train_split, y_train_split, x_val_split, y_val_split, x_full, y_full, x_test_final)\ngb_preds = full_model_analysis(\"GradientBoosting\", best_gb, x_train_split, y_train_split, x_val_split, y_val_split, x_full, y_full, x_test_final)\nstack_preds = full_model_analysis(\"Stacking\", stack_model, x_train_split, y_train_split, x_val_split, y_val_split, x_full, y_full, x_test_final)","metadata":{"_uuid":"77647345-eeee-41b2-ab0b-6dc253a7c426","_cell_guid":"72638dab-c680-47e3-8a62-ee979085db31","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T18:00:43.587279Z","iopub.execute_input":"2025-06-03T18:00:43.587555Z","iopub.status.idle":"2025-06-03T18:01:26.606329Z","shell.execute_reply.started":"2025-06-03T18:00:43.587533Z","shell.execute_reply":"2025-06-03T18:01:26.605540Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"def class_f1_detail(model, x, y, title=\"F1 by Class\"):\n    from sklearn.metrics import classification_report\n    report = classification_report(y, model.predict(x), output_dict=True)\n    f1s = [report[str(i)]['f1-score'] for i in range(3)]\n    plt.bar([0, 1, 2], f1s, tick_label=['Class 0', 'Class 1', 'Class 2'])\n    plt.title(title)\n    plt.ylim(0, 1)\n    plt.show()","metadata":{"_uuid":"a0bf2b98-8a45-4e7f-95ee-f4c2e7fb6ed8","_cell_guid":"123bff00-06e3-449d-aa8c-1aeb19f291e8","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T18:01:26.607114Z","iopub.execute_input":"2025-06-03T18:01:26.607305Z","iopub.status.idle":"2025-06-03T18:01:26.612406Z","shell.execute_reply.started":"2025-06-03T18:01:26.607287Z","shell.execute_reply":"2025-06-03T18:01:26.611729Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"def inspect_misclassified(model, x, y):\n    y_pred = model.predict(x)\n    mis_idx = np.where(y != y_pred)[0]\n    mis_df = x.iloc[mis_idx].copy()\n    mis_df['true'] = y[mis_idx]\n    mis_df['pred'] = y_pred[mis_idx]\n    for pair in [(0,2), (2,0), (1,0)]:\n        subset = mis_df[(mis_df['true']==pair[0]) & (mis_df['pred']==pair[1])]\n        if len(subset) > 0:\n            print(f\"\\nMisclassified {pair[0]} → {pair[1]}: {len(subset)} samples\")\n            print(subset.mean().sort_values(ascending=False).head(10))","metadata":{"_uuid":"2bae8c20-16a5-467a-987d-936b0f818d10","_cell_guid":"51440a40-c6d4-4690-8925-f0db7cac52f9","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T18:01:26.613146Z","iopub.execute_input":"2025-06-03T18:01:26.613367Z","iopub.status.idle":"2025-06-03T18:01:26.634502Z","shell.execute_reply.started":"2025-06-03T18:01:26.613349Z","shell.execute_reply":"2025-06-03T18:01:26.633749Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"def show_prediction_confidence(model, x):\n    proba = model.predict_proba(x)\n    plt.hist(np.max(proba, axis=1), bins=50, color='skyblue')\n    plt.title(\"Prediction Confidence (Max Probability)\")\n    plt.xlabel(\"Confidence\")\n    plt.ylabel(\"Count\")\n    plt.show()","metadata":{"_uuid":"96fcebbb-08bd-4ee2-8839-6e9935971056","_cell_guid":"7f7d5571-c947-40f0-a283-523ee751b977","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T18:01:26.635278Z","iopub.execute_input":"2025-06-03T18:01:26.635612Z","iopub.status.idle":"2025-06-03T18:01:26.649798Z","shell.execute_reply.started":"2025-06-03T18:01:26.635593Z","shell.execute_reply":"2025-06-03T18:01:26.649026Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"def compare_models(models, x, y):\n    result = []\n    for name, model in models:\n        acc = accuracy_score(y, model.predict(x))\n        f1 = f1_score(y, model.predict(x), average='macro')\n        result.append((name, acc, f1))\n    return pd.DataFrame(result, columns=[\"Model\", \"Accuracy\", \"Macro F1\"])","metadata":{"_uuid":"7233cae3-3cef-416c-9db9-383062d3f82f","_cell_guid":"4956b1c3-bb1d-4349-8b22-2fb2d19c35f6","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T18:01:26.650645Z","iopub.execute_input":"2025-06-03T18:01:26.650911Z","iopub.status.idle":"2025-06-03T18:01:26.667975Z","shell.execute_reply.started":"2025-06-03T18:01:26.650895Z","shell.execute_reply":"2025-06-03T18:01:26.666878Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"class_f1_detail(stack_model, x_val_split, y_val_split)\ninspect_misclassified(stack_model, x_val_split, y_val_split)\nshow_prediction_confidence(stack_model, x_val_split)\ncompare_models([\n    (\"RandomForest\", best_rf),\n    (\"XGBoost\", best_xgb),\n    (\"GradientBoosting\", best_gb),\n    (\"Stacking\", stack_model),\n], x_val_split, y_val_split)","metadata":{"_uuid":"600ca4cb-95cb-40ff-9f58-f979ece55e5a","_cell_guid":"2f6b6fe8-f6c9-4eab-87b2-778bbad37c8b","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T18:01:26.668911Z","iopub.execute_input":"2025-06-03T18:01:26.669530Z","iopub.status.idle":"2025-06-03T18:01:27.614106Z","shell.execute_reply.started":"2025-06-03T18:01:26.669508Z","shell.execute_reply":"2025-06-03T18:01:27.613308Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# Submission 결과 제출","metadata":{"_uuid":"55565bac-c24d-4c34-b66f-505495cf45d6","_cell_guid":"82d5a7c5-e1a9-479c-9de0-c1d3d62fc4e8","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"# 최종 학습용 모델 (스태킹)\nfinal_stack_model = StackingClassifier(\n    estimators=[\n        ('rf', best_rf),\n        ('xgb', best_xgb),\n        ('gb', best_gb),\n    ],\n    final_estimator=XGBClassifier(\n        **best_xgb_params,\n        reg_alpha=0.3,\n        reg_lambda=1.0,\n        use_label_encoder=False,\n        eval_metric='mlogloss',\n        random_state=42\n    ),\n    stack_method='predict',\n    passthrough=True,\n    cv=5,\n    n_jobs=-1\n)","metadata":{"_uuid":"66727c95-f86f-4c9d-b39a-c744b878bc4a","_cell_guid":"2f232af8-ddae-42b0-8b32-f0d05eb98f53","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false},"scrolled":true,"execution":{"iopub.status.busy":"2025-06-03T18:01:27.614870Z","iopub.execute_input":"2025-06-03T18:01:27.615138Z","iopub.status.idle":"2025-06-03T18:01:27.619429Z","shell.execute_reply.started":"2025-06-03T18:01:27.615120Z","shell.execute_reply":"2025-06-03T18:01:27.618815Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 🔹 스태킹 모델 학습\nprint(\"\\n전체 데이터로 최종 모델 학습 중...\")\nfinal_stack_model.fit(x_full, y_full)\n\n# 🔹 테스트셋 feature 정렬 (훈련 컬럼 순서와 동일하게)\ntrained_cols = final_stack_model.feature_names_in_\nx_test_final_aligned = x_test_final[trained_cols]\n\n# 🔹 예측 수행\npred_test = final_stack_model.predict(x_test_final_aligned)\nproba_test = final_stack_model.predict_proba(x_test_final_aligned)\n\n# 🔹 후처리 없이 바로 결과 사용\nfinal_pred = pred_test","metadata":{"_uuid":"37a9b712-73ee-40ee-91fd-519ae6c50eb2","_cell_guid":"ecc6f00c-616a-48cc-adf3-00839d082bc4","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T18:04:53.461297Z","iopub.execute_input":"2025-06-03T18:04:53.461659Z","iopub.status.idle":"2025-06-03T18:05:28.145626Z","shell.execute_reply.started":"2025-06-03T18:04:53.461636Z","shell.execute_reply":"2025-06-03T18:05:28.144552Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# RandomForest (KFold 평가)\n_ = kfold_model_analysis(\"RandomForest-KFold\", best_rf, x_full, y_full, x_test_final)\n\n# XGBoost (KFold 평가)\n_ = kfold_model_analysis(\"XGBoost-KFold\", best_xgb, x_full, y_full, x_test_final)\n\n# GradientBoosting (KFold 평가)\n_ = kfold_model_analysis(\"GradientBoosting-KFold\", best_gb, x_full, y_full, x_test_final)\n\n# Stacking (KFold 평가)\n_ = kfold_model_analysis(\"Stacking-KFold\", stack_model, x_full, y_full, x_test_final)","metadata":{"_uuid":"60c9c9b8-3a21-435a-b60b-3112eb812cb4","_cell_guid":"ccadb3d9-a3a4-4a77-ac10-bdbc59af55f7","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T18:05:28.147232Z","iopub.execute_input":"2025-06-03T18:05:28.147518Z","iopub.status.idle":"2025-06-03T18:08:43.341429Z","shell.execute_reply.started":"2025-06-03T18:05:28.147498Z","shell.execute_reply":"2025-06-03T18:08:43.340617Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"print(\"\\nPermutation Importance 분석 중...\")\n\n# 컬럼 정렬 일치시키기\nx_test_perm = x_test_final[final_stack_model.feature_names_in_]\n\nr = permutation_importance(final_stack_model, x_test_perm, final_pred, n_repeats=10, random_state=42)\nperm_sorted_idx = r.importances_mean.argsort()[::-1]\n\nplt.figure(figsize=(10, 6))\nsns.barplot(\n    x=r.importances_mean[perm_sorted_idx][:20],\n    y=x_test_perm.columns[perm_sorted_idx][:20]\n)\nplt.title(\"Permutation Importance (Top 20)\")\nplt.xlabel(\"Importance Mean\")\nplt.tight_layout()\nplt.show()","metadata":{"_uuid":"06e79fdc-7bf8-46f2-b340-63c338d461a5","_cell_guid":"695cfc28-774c-4403-afc0-cdf99375ad77","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-06-03T18:08:43.342196Z","iopub.execute_input":"2025-06-03T18:08:43.342391Z","iopub.status.idle":"2025-06-03T18:09:06.004125Z","shell.execute_reply.started":"2025-06-03T18:08:43.342375Z","shell.execute_reply":"2025-06-03T18:09:06.003249Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 제출 파일 템플릿 로드\nresult = pd.read_csv('/kaggle/input/uou-ie-g-03874-spring-2025-term-project/ML_sample_submission.csv')\n\n# 예측 결과 삽입\nresult['Credit_Score'] = final_pred\n\n# 저장\nresult.to_csv('submission.csv', index=False)","metadata":{"_uuid":"9d2ffb65-5fb6-4a18-b7d9-29adc1356baa","_cell_guid":"a52ba1a8-263f-45bd-bfc6-648db8036125","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null}]}